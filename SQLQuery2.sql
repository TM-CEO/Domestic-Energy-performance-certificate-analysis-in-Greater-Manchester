
----- Select first 1000 rows of the dataset ----

SELECT TOP (1000) [LMK_KEY]
      ,[ADDRESS1]
      ,[ADDRESS2]
      ,[ADDRESS3]
      ,[POSTCODE]
      ,[BUILDING_REFERENCE_NUMBER]
      ,[CURRENT_ENERGY_RATING]
      ,[POTENTIAL_ENERGY_RATING]
      ,[CURRENT_ENERGY_EFFICIENCY]
      ,[POTENTIAL_ENERGY_EFFICIENCY]
      ,[PROPERTY_TYPE]
      ,[BUILT_FORM]
      ,[INSPECTION_DATE]
      ,[LOCAL_AUTHORITY]
      ,[CONSTITUENCY]
      ,[COUNTY]
      ,[LODGEMENT_DATE]
      ,[TRANSACTION_TYPE]
      ,[ENVIRONMENT_IMPACT_CURRENT]
      ,[ENVIRONMENT_IMPACT_POTENTIAL]
      ,[ENERGY_CONSUMPTION_CURRENT]
      ,[ENERGY_CONSUMPTION_POTENTIAL]
      ,[CO2_EMISSIONS_CURRENT]
      ,[CO2_EMISS_CURR_PER_FLOOR_AREA]
      ,[CO2_EMISSIONS_POTENTIAL]
      ,[LIGHTING_COST_CURRENT]
      ,[LIGHTING_COST_POTENTIAL]
      ,[HEATING_COST_CURRENT]
      ,[HEATING_COST_POTENTIAL]
      ,[HOT_WATER_COST_CURRENT]
      ,[HOT_WATER_COST_POTENTIAL]
      ,[TOTAL_FLOOR_AREA]
      ,[ENERGY_TARIFF]
      ,[MAINS_GAS_FLAG]
      ,[FLOOR_LEVEL]
      ,[FLAT_TOP_STOREY]
      ,[FLAT_STOREY_COUNT]
      ,[MAIN_HEATING_CONTROLS]
      ,[MULTI_GLAZE_PROPORTION]
      ,[GLAZED_TYPE]
      ,[GLAZED_AREA]
      ,[EXTENSION_COUNT]
      ,[NUMBER_HABITABLE_ROOMS]
      ,[NUMBER_HEATED_ROOMS]
      ,[LOW_ENERGY_LIGHTING]
      ,[NUMBER_OPEN_FIREPLACES]
      ,[HOTWATER_DESCRIPTION]
      ,[HOT_WATER_ENERGY_EFF]
      ,[HOT_WATER_ENV_EFF]
      ,[FLOOR_DESCRIPTION]
      ,[FLOOR_ENERGY_EFF]
      ,[FLOOR_ENV_EFF]
      ,[WINDOWS_DESCRIPTION]
      ,[WINDOWS_ENERGY_EFF]
      ,[WINDOWS_ENV_EFF]
      ,[WALLS_DESCRIPTION]
      ,[WALLS_ENERGY_EFF]
      ,[WALLS_ENV_EFF]
      ,[SECONDHEAT_DESCRIPTION]
      ,[SHEATING_ENERGY_EFF]
      ,[SHEATING_ENV_EFF]
      ,[ROOF_DESCRIPTION]
      ,[ROOF_ENERGY_EFF]
      ,[ROOF_ENV_EFF]
      ,[MAINHEAT_DESCRIPTION]
      ,[MAINHEAT_ENERGY_EFF]
      ,[MAINHEAT_ENV_EFF]
      ,[MAINHEATCONT_DESCRIPTION]
      ,[MAINHEATC_ENERGY_EFF]
      ,[MAINHEATC_ENV_EFF]
      ,[LIGHTING_DESCRIPTION]
      ,[LIGHTING_ENERGY_EFF]
      ,[LIGHTING_ENV_EFF]
      ,[MAIN_FUEL]
      ,[WIND_TURBINE_COUNT]
      ,[HEAT_LOSS_CORRIDOR]
      ,[UNHEATED_CORRIDOR_LENGTH]
      ,[FLOOR_HEIGHT]
      ,[PHOTO_SUPPLY]
      ,[SOLAR_WATER_HEATING_FLAG]
      ,[MECHANICAL_VENTILATION]
      ,[ADDRESS]
      ,[LOCAL_AUTHORITY_LABEL]
      ,[CONSTITUENCY_LABEL]
      ,[POSTTOWN]
      ,[CONSTRUCTION_AGE_BAND]
      ,[LODGEMENT_DATETIME]
      ,[TENURE]
      ,[FIXED_LIGHTING_OUTLETS_COUNT]
      ,[LOW_ENERGY_FIXED_LIGHT_COUNT]
      ,[UPRN]
      ,[UPRN_SOURCE]
  FROM [dbo].[certificates_RAW]

---- Check the shape of the dataset ---

select count([LMK_KEY])
from [dbo].[certificates_RAW]

select count(UPRN_SOURCE)
from [dbo].[certificates_RAW]

EXEC sp_help '[dbo].[certificates_staging]';

--First we have to clean the dataset, here are the steps---
---Step01- Creat a same dummy of dataset. Because if we have an issue during the cleaning process we have the raw dataset--

-- Create a copy of the layoffs table structure (without data) ----
-- Create the certificates_staging table in the dbo schema with the same structure as certificates -----

SELECT TOP 0 * 
INTO [dbo].[certificates_staging]
FROM [dbo].[certificates_RAW]


-- Insert data from the original layoffs table into the staging table -----

INSERT INTO [dbo].[certificates_staging]
SELECT * 
FROM [dbo].[certificates_RAW]


--- According to instructions we have to use data between 2013 to 2023 -----
--- Get the final data acording to the instructions---

--- Get the data values from 2013 to 2023 with checking nulls ----

SELECT [INSPECTION_DATE]
FROM [dbo].[certificates_staging]
WHERE TRY_CONVERT(DATE,[INSPECTION_DATE] , 120) IS NULL 
AND [INSPECTION_DATE] IS NOT NULL;

UPDATE [dbo].[certificates_staging]
SET [INSPECTION_DATE] = CONVERT(DATE, [INSPECTION_DATE], 120)
WHERE TRY_CONVERT(DATE, [INSPECTION_DATE], 120) IS NOT NULL;

select distinct [INSPECTION_DATE]
from [dbo].[certificates_staging]

DELETE FROM [dbo].[certificates_staging]
WHERE TRY_CAST(INSPECTION_DATE AS DATE) < '2013-01-01'
   OR TRY_CAST(INSPECTION_DATE AS DATE) > '2023-12-31';

SELECT COUNT([LMK_KEY])
FROM [dbo].[certificates_staging]

--- CHECK THE DATASET IS ACCORDING TO THE INSTRUCTIONS -----

SELECT DISTINCT YEAR(TRY_CAST([INSPECTION_DATE] AS DATE)) AS Year
FROM [dbo].[certificates_staging]
WHERE [INSPECTION_DATE] IS NOT NULL
ORDER BY Year;

SELECT [INSPECTION_DATE]
FROM [dbo].[certificates_staging]
WHERE TRY_CAST([INSPECTION_DATE] AS DATE) IS NULL
  AND [INSPECTION_DATE] IS NOT NULL;

SELECT DISTINCT YEAR(TRY_CAST([INSPECTION_DATE] AS DATE)) AS Year
FROM [dbo].[certificates_staging]
WHERE TRY_CAST([INSPECTION_DATE] AS DATE) IS NOT NULL
ORDER BY Year;

SELECT COUNT(*) AS NonNullRowCount
FROM [dbo].[certificates_staging]
WHERE [INSPECTION_DATE] IS NOT NULL;

--- Step01---
--- Remove duplicates----
--- CREATE A COLUMN TOIDENTIFY DUPLICATES ----

SELECT *
FROM (
	SELECT [LMK_KEY],[LOCAL_AUTHORITY],
		ROW_NUMBER() OVER(
			PARTITION BY [LMK_KEY]
			ORDER BY [LMK_KEY]
			) AS row_num
	FROM [dbo].[certificates_staging]
		
) duplicates
WHERE 
	row_num > 1;

---- CHECK HOW MANY ROWS EXIST AS DUPLICATES ---

WITH duplicate_CTE AS
	(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY [LMK_KEY],[LOCAL_AUTHORITY]
ORDER BY [LMK_KEY]) AS row_num
FROM[dbo].[certificates_staging]
	)
	SELECT *
	FROM duplicate_CTE
	WHERE row_num>1

---- DELETE DUPLICATES ----

WITH duplicate_CTE AS
	(
SELECT *,
ROW_NUMBER() OVER(
PARTITION BY [LMK_KEY],[LOCAL_AUTHORITY]
ORDER BY [LMK_KEY]) AS row_num
FROM[dbo].[certificates_staging]
	)
	DELETE
	FROM duplicate_CTE
	WHERE row_num>1;

SELECT COUNT([LMK_KEY])
FROM [dbo].[certificates_staging]

---step 02 ---
--- Drop unnecessary columns in the dataset ----

ALTER TABLE [dbo].[certificates_staging]
DROP COLUMN [ADDRESS1],[ADDRESS2],[ADDRESS3],[CONSTITUENCY],[COUNTY],[LOCAL_AUTHORITY],[FLOOR_LEVEL],[LODGEMENT_DATE],[FLAT_STOREY_COUNT],
                        [HOTWATER_DESCRIPTION],[FLOOR_DESCRIPTION],[WINDOWS_DESCRIPTION],[WALLS_DESCRIPTION],[MAIN_HEATING_CONTROLS],
                        [SECONDHEAT_DESCRIPTION],[SHEATING_ENERGY_EFF], [SHEATING_ENV_EFF], [ROOF_DESCRIPTION],[MAINHEAT_DESCRIPTION],
                        [MAINHEATCONT_DESCRIPTION],[LIGHTING_DESCRIPTION],[HEAT_LOSS_CORRIDOR], [UNHEATED_CORRIDOR_LENGTH],[FLOOR_HEIGHT],
                        [PHOTO_SUPPLY],[FLOOR_ENERGY_EFF],[FLOOR_ENV_EFF],[LOCAL_AUTHORITY_LABEL], [CONSTRUCTION_AGE_BAND],[LODGEMENT_DATETIME],[UPRN],[UPRN_SOURCE]

---STEP03---
--- EDA(Exploratory Data Analysis) & STANDARIZE THE DATA ---
---- check the distinct count of categories in various columns and delete unnecessary ---

SELECT MAX([CURRENT_ENERGY_EFFICIENCY]),MIN ([CURRENT_ENERGY_EFFICIENCY])
FROM[dbo].[certificates_staging]

SELECT MAX([POTENTIAL_ENERGY_EFFICIENCY]),MIN ([POTENTIAL_ENERGY_EFFICIENCY])
FROM[dbo].[certificates_staging]

SELECT DISTINCT [CURRENT_ENERGY_RATING]
FROM [dbo].[certificates_staging]

SELECT DISTINCT [POTENTIAL_ENERGY_RATING]
FROM [dbo].[certificates_staging]

SELECT DISTINCT [PROPERTY_TYPE]
FROM[dbo].[certificates_staging]

SELECT DISTINCT[BUILT_FORM] 
FROM[dbo].[certificates_staging]

SELECT *
FROM[dbo].[certificates_staging]
WHERE [BUILT_FORM]IS NULL OR [BUILT_FORM]='';

SELECT DISTINCT [PROPERTY_TYPE]
FROM[dbo].[certificates_staging]
WHERE [BUILT_FORM]='';

SELECT DISTINCT [TRANSACTION_TYPE]
FROM[dbo].[certificates_staging]

SELECT DISTINCT [POTENTIAL_ENERGY_RATING]
FROM[dbo].[certificates_staging]

SELECT MAX([TOTAL_FLOOR_AREA]),MIN ([TOTAL_FLOOR_AREA])
FROM[dbo].[certificates_staging]

SELECT DISTINCT [GLAZED_TYPE]
FROM[dbo].[certificates_staging]

SELECT *
FROM [dbo].[certificates_staging]
WHERE [GLAZED_TYPE]='INVALID!'OR [GLAZED_TYPE]='NO DATA!' OR [GLAZED_TYPE]='' OR [GLAZED_TYPE]= 'not defined'

SELECT DISTINCT [MAIN_FUEL]
FROM[dbo].[certificates_staging]

SELECT DISTINCT POSTTOWN
FROM [dbo].[certificates_staging]

SELECT LTRIM([POSTCODE])
FROM [dbo].[certificates_staging]

SELECT *
FROM [dbo].[certificates_staging]
where postcode is null or postcode='' or postcode='unknown'

UPDATE certificates_staging
SET POSTCODE = LEFT(POSTCODE, 3)
WHERE POSTCODE IS NOT NULL;

select top(100)*
from [dbo].[certificates_staging]

--- step 04 ---
--- CHECKING THE NULL VALUES AND REMOVE THEM ----

SELECT *
FROM [dbo].[certificates_staging]
WHERE [LMK_KEY] ='NO DATA!'
   OR [POSTTOWN] ='NO DATA!'
   OR [BUILDING_REFERENCE_NUMBER] ='NO DATA!'
   OR [CURRENT_ENERGY_RATING] ='NO DATA!'
   OR [POTENTIAL_ENERGY_EFFICIENCY] ='NO DATA!'
   OR [PROPERTY_TYPE] ='NO DATA!'
   OR [BUILT_FORM] ='NO DATA!'
   OR [INSPECTION_DATE] ='NO DATA!'
   OR [TRANSACTION_TYPE]='NO DATA!'
   OR [ENVIRONMENT_IMPACT_CURRENT] ='NO DATA!'
   OR [ENVIRONMENT_IMPACT_POTENTIAL] ='NO DATA!'
   OR [ENERGY_CONSUMPTION_CURRENT] ='NO DATA!'
   OR [ENERGY_CONSUMPTION_POTENTIAL] ='NO DATA!'
   OR [CO2_EMISSIONS_CURRENT] ='NO DATA!'
   OR [CO2_EMISS_CURR_PER_FLOOR_AREA] ='NO DATA!'
   OR [CO2_EMISSIONS_POTENTIAL]='NO DATA!'
   OR [LIGHTING_COST_CURRENT] ='NO DATA!'
   OR [LIGHTING_COST_POTENTIAL] ='NO DATA!'
   OR [HEATING_COST_CURRENT] ='NO DATA!'
   OR [HEATING_COST_POTENTIAL] ='NO DATA!'
   OR [HOT_WATER_COST_CURRENT] ='NO DATA!'
   OR [HOT_WATER_COST_POTENTIAL] ='NO DATA!'
   OR [TOTAL_FLOOR_AREA] ='NO DATA!'
   OR [ENERGY_TARIFF] ='NO DATA!'
   OR [MAINS_GAS_FLAG] ='NO DATA!'
   OR [FLAT_TOP_STOREY]='NO DATA!'
   OR [MULTI_GLAZE_PROPORTION] ='NO DATA!'
   OR [GLAZED_TYPE] ='NO DATA!'
   OR [GLAZED_AREA]='NO DATA!'
   OR [EXTENSION_COUNT] ='NO DATA!'
   OR [NUMBER_HABITABLE_ROOMS] ='NO DATA!'
   OR [NUMBER_HEATED_ROOMS] ='NO DATA!'
   OR [LOW_ENERGY_LIGHTING] ='NO DATA!'
   OR [NUMBER_OPEN_FIREPLACES] ='NO DATA!'
   OR [HOT_WATER_ENERGY_EFF] ='NO DATA!'
   OR [HOT_WATER_ENV_EFF] ='NO DATA!'
   OR [FLOOR_ENERGY_EFF] ='NO DATA!'
   OR [FLOOR_ENV_EFF] ='NO DATA!'
   OR [WINDOWS_ENERGY_EFF] ='NO DATA!'
   OR [WINDOWS_ENV_EFF] ='NO DATA!'
   OR [WALLS_ENERGY_EFF] ='NO DATA!'
   OR [WALLS_ENV_EFF] ='NO DATA!'
   OR [ROOF_ENERGY_EFF] ='NO DATA!'
   OR [ROOF_ENV_EFF]='NO DATA!'
   OR [MAINHEAT_ENERGY_EFF] ='NO DATA!'
   OR [MAINHEAT_ENV_EFF] ='NO DATA!'
   OR [LIGHTING_ENERGY_EFF] ='NO DATA!'
   OR [LIGHTING_ENV_EFF]='NO DATA!'
   OR [MAIN_FUEL]='NO DATA!'
   OR [WIND_TURBINE_COUNT] ='NO DATA!'
   OR [SOLAR_WATER_HEATING_FLAG]='NO DATA!'
   OR [MECHANICAL_VENTILATION] ='NO DATA!'
   OR [ADDRESS] ='NO DATA!'
   OR [CONSTITUENCY_LABEL] ='NO DATA!'
   OR [TENURE] ='NO DATA!'
   OR [FIXED_LIGHTING_OUTLETS_COUNT] ='NO DATA!'
   OR [LOW_ENERGY_FIXED_LIGHT_COUNT] ='NO DATA!'
  

---- COLUMN COUNT ----

SELECT COUNT(*)
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'certificates_staging';

---- THERE ARE 60 COLUMNS IN THE DATASET. SO IF WE CLEAN THIS WITH BLANKS AND OTHERS IT SHOULD AFFECT TO THE OTHER COLUMNS. 
---- THEREFORE WE CLEANED THE MAIN KEY VARIABLES OF THE DATASET ---

SELECT *
FROM [dbo].[certificates_staging]
WHERE [LMK_KEY] IS NULL OR [LMK_KEY]=' ' OR [LMK_KEY]='NO DATA!'

DELETE 
FROM [dbo].[certificates_staging]
WHERE [TRANSACTION_TYPE]='NO DATA!' OR [TRANSACTION_TYPE]='unknown'

----- Delete the null values from main variables ----

WITH NULL_CTE AS 
(
SELECT *
FROM [dbo].[certificates_staging]
WHERE[BUILDING_REFERENCE_NUMBER] IS NULL OR [BUILDING_REFERENCE_NUMBER]=' ' OR [BUILDING_REFERENCE_NUMBER]='NO DATA!'
OR  [ADDRESS] IS NULL OR [ADDRESS] = ' ' OR [ADDRESS]='NO DATA!'
OR  [POSTTOWN]IS NULL OR [POSTTOWN]=' ' OR [POSTTOWN] = 'NO DATA!'
OR [ENERGY_CONSUMPTION_CURRENT] IS NULL OR [ENERGY_CONSUMPTION_CURRENT]=' ' OR [ENERGY_CONSUMPTION_CURRENT]='NO DATA!'
OR [BUILT_FORM] IS NULL OR [BUILT_FORM]='' OR [BUILT_FORM]='NO DATA!'
OR [INSPECTION_DATE] IS NULL OR [INSPECTION_DATE]='' OR [INSPECTION_DATE]='NO DATA!'
OR [ENVIRONMENT_IMPACT_CURRENT] IS NULL OR [ENVIRONMENT_IMPACT_CURRENT]='' OR [ENVIRONMENT_IMPACT_CURRENT]='NO DATA!'
OR [ENVIRONMENT_IMPACT_POTENTIAL] IS NULL OR [ENVIRONMENT_IMPACT_POTENTIAL]='' OR [ENVIRONMENT_IMPACT_POTENTIAL]='NO DATA!'
OR [ENERGY_CONSUMPTION_CURRENT] IS NULL OR [ENERGY_CONSUMPTION_CURRENT]='' OR [ENERGY_CONSUMPTION_CURRENT]='NO DATA!'
OR [ENERGY_CONSUMPTION_POTENTIAL] IS NULL OR [ENERGY_CONSUMPTION_POTENTIAL]='' OR [ENERGY_CONSUMPTION_POTENTIAL]='NO DATA!'
OR [CO2_EMISSIONS_CURRENT]IS NULL OR [CO2_EMISSIONS_CURRENT]='' OR [CO2_EMISSIONS_CURRENT]='NO DATA!'
OR [CO2_EMISSIONS_POTENTIAL]IS NULL OR [CO2_EMISSIONS_POTENTIAL]='' OR [CO2_EMISSIONS_POTENTIAL]='NO DATA!'
OR [LIGHTING_COST_CURRENT]IS NULL OR [LIGHTING_COST_CURRENT]='' OR [LIGHTING_COST_CURRENT]='NO DATA!'
OR [LIGHTING_COST_POTENTIAL]IS NULL OR [LIGHTING_COST_POTENTIAL]='' OR [LIGHTING_COST_POTENTIAL]='NO DATA!'
OR [HEATING_COST_CURRENT]IS NULL OR [HEATING_COST_CURRENT]='' OR [HEATING_COST_CURRENT]='NO DATA!'
OR [HEATING_COST_POTENTIAL]IS NULL OR [HEATING_COST_POTENTIAL]='' OR [HEATING_COST_POTENTIAL]='NO DATA!'
OR [HOT_WATER_COST_CURRENT]IS NULL OR [HOT_WATER_COST_CURRENT]='' OR [HOT_WATER_COST_CURRENT]='NO DATA!'
OR [HOT_WATER_COST_POTENTIAL]IS NULL OR [HOT_WATER_COST_POTENTIAL]='' OR [HOT_WATER_COST_POTENTIAL]='NO DATA!'
OR [POSTCODE] IS NULL OR [POSTCODE] ='' OR [POSTCODE]='NO DATA!'

)
DELETE 
FROM NULL_CTE

SELECT *
FROM [dbo].[certificates_staging]
WHERE ENVIRONMENT_IMPACT_POTENTIAL IS NOT NULL AND INSPECTION_DATE IS NULL

SELECT *
FROM  [dbo].[certificates_staging]
WHERE [LIGHTING_COST_CURRENT] IS NULL OR [LIGHTING_COST_CURRENT]=''

--- FINAL DATASET row count ----

SELECT COUNT([LMK_KEY])
FROM [dbo].[certificates_staging]



--------- CREATE VIEWS FOR OWN VISUALS ------------------

CREATE VIEW PropertytypeStats AS
SELECT 
    [PROPERTY_TYPE], 
    CASE 
        WHEN ISDATE([INSPECTION_DATE]) = 1 
        THEN YEAR(CAST([INSPECTION_DATE] AS DATE))
        ELSE NULL 
    END AS Year, 
    COUNT(*) AS TotalProperties,
    AVG(TRY_CAST([ENVIRONMENT_IMPACT_CURRENT] AS FLOAT)) AS AvgEnvironmentImpactCurrent,
    AVG(TRY_CAST([ENVIRONMENT_IMPACT_POTENTIAL] AS FLOAT)) AS AvgEnvironmentImpactPotential,
    AVG(TRY_CAST( [CURRENT_ENERGY_EFFICIENCY] AS FLOAT)) AS AvgCurrentEnergyEfficiency,
    AVG(TRY_CAST([POTENTIAL_ENERGY_EFFICIENCY] AS FLOAT)) AS AvgPotentialEnergyEfficiency
FROM [dbo].[certificates_staging]
WHERE [PROPERTY_TYPE] IS NOT NULL
  AND ISDATE([INSPECTION_DATE]) = 1  -- Only process rows with valid dates
GROUP BY [PROPERTY_TYPE], 
         CASE 
             WHEN ISDATE([INSPECTION_DATE]) = 1 
             THEN YEAR(CAST([INSPECTION_DATE] AS DATE))
             ELSE NULL 
         END


SELECT sum([TotalProperties])
FROM [dbo].[PropertytypeStats]


----- Create a view for Ratings ------

CREATE VIEW EnergyRatingSummary AS
SELECT 
    CURRENT_ENERGY_RATING AS RatingType,  
    
    -- Mapping of Ratings to Numeric Values
    CASE 
        WHEN CURRENT_ENERGY_RATING = 'A' THEN 7
        WHEN CURRENT_ENERGY_RATING = 'B' THEN 6
        WHEN CURRENT_ENERGY_RATING = 'C' THEN 5
        WHEN CURRENT_ENERGY_RATING = 'D' THEN 4
        WHEN CURRENT_ENERGY_RATING = 'E' THEN 3
        WHEN CURRENT_ENERGY_RATING = 'F' THEN 2
        WHEN CURRENT_ENERGY_RATING = 'G' THEN 1
    END AS NumericRating,   
    
    COUNT(*) AS PropertyCount   
    
FROM 
    [dbo].[certificates_staging]   
GROUP BY 
    CURRENT_ENERGY_RATING



select *
from [dbo].[EnergyRatingSummary]
order by [RatingType] asc


---- View for energy total cost along with property type and year----

    
CREATE PROCEDURE GetEnergyEfficiencyTrends2
AS
BEGIN
    SELECT YEAR(INSPECTION_DATE) AS Year, 
           
           AVG(CAST(CURRENT_ENERGY_EFFICIENCY AS DECIMAL(10, 2))) AS AvgCurrentEfficiency,
           AVG(CAST(POTENTIAL_ENERGY_EFFICIENCY AS DECIMAL(10, 2))) AS AvgPotentialEfficiency
    FROM [dbo].[certificates_staging]
    GROUP BY YEAR(INSPECTION_DATE), POSTTOWN
    
END;



 

